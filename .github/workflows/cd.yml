name: Java CD with Gradle

on:
  push:
    branches: [ "dev", "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Connect to EC2 via SSH
        uses: appleboy/ssh-action@master
        env:
          APPLICATION_YML: ${{ secrets.APPLICATION_YML }}
          APPLICATION_TEST_YML: ${{ secrets.APPLICATION_TEST_YML }}
          TEST_DATA_SQL: ${{ secrets.TEST_DATA_SQL }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          envs: APPLICATION_YML, APPLICATION_TEST_YML, TEST_DATA_SQL
          # git clone 같은 초기 작업은 ec2에서 먼저 진행
          script: |
            cd /home/ubuntu/poptato_server/Poptato_Server_V2

            git switch dev

            git pull origin dev

            rm -rf src/main/resources/application.yml

            mkdir -p src/main/resources

            echo "$APPLICATION_YML" > src/main/resources/application.yml

            rm -rf src/test/resources/application.yml
            
            mkdir -p src/test/resources

            echo "$APPLICATION_TEST_YML" > src/test/resources/application.yml
            
            rm -rf src/test/resources/data.sql
          
            echo "$TEST_DATA_SQL" > src/test/resources/data.sql

            chmod +x gradlew

            ./gradlew clean
            ./gradlew build

            sudo fuser -k -n tcp "${{ secrets.SERVER_PORT }}" || true

            nohup java -Duser.timezone=Asia/Seoul -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &
